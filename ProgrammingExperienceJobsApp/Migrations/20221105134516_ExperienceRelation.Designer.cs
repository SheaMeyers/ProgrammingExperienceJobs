// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProgrammingExperienceJobsApp.Data;

#nullable disable

namespace ProgrammingExperienceJobsApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221105134516_ExperienceRelation")]
    partial class ExperienceRelation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ExperienceJobPost", b =>
                {
                    b.Property<int>("ExperiencesLanguage")
                        .HasColumnType("integer");

                    b.Property<Guid>("JobPostsId")
                        .HasColumnType("uuid");

                    b.HasKey("ExperiencesLanguage", "JobPostsId");

                    b.HasIndex("JobPostsId");

                    b.ToTable("ExperienceJobPost");
                });

            modelBuilder.Entity("ProgrammingExperienceJobsApp.Models.Experience", b =>
                {
                    b.Property<int>("Language")
                        .HasColumnType("integer");

                    b.Property<int>("Years")
                        .HasColumnType("integer");

                    b.HasKey("Language");

                    b.ToTable("Experience");
                });

            modelBuilder.Entity("ProgrammingExperienceJobsApp.Models.JobPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("JobPost");
                });

            modelBuilder.Entity("ExperienceJobPost", b =>
                {
                    b.HasOne("ProgrammingExperienceJobsApp.Models.Experience", null)
                        .WithMany()
                        .HasForeignKey("ExperiencesLanguage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgrammingExperienceJobsApp.Models.JobPost", null)
                        .WithMany()
                        .HasForeignKey("JobPostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
